@page "/"

@using BabyData.Components.Account
@using ApexCharts
@using BabyData.Data
@using Microsoft.EntityFrameworkCore

@inject IUserIdentityProcessor UserIdentityProcessor
@inject IDbContextFactory<BabyData.Data.ApplicationDbContext> DbFactory

@rendermode InteractiveServer



<PageTitle>Home</PageTitle>

@if(string.IsNullOrEmpty(UserName))
{
    <h1>Welcome To BabyData</h1>
    <h3>Please register or log in to begin</h3>
}
else
{
    <h1>Hello @UserName</h1>
    <div style="width:100%">
        <ApexChart TItem="FeedingRecord"
                   Title="Time Spent Feeding Today">
            <ApexPointSeries TItem="FeedingRecord"
                             Items="FeedingRecords"
                             Name="Time Spendt Feeding"
                             SeriesType="SeriesType.Bar"
                             XValue="e => e.StartTimeUtc"
                             YValue="e=> (decimal)e.ElapsedTime.TotalMinutes" />
        </ApexChart>
    </div>
}

@code {
    private string? UserName { get; set; } = default!;
    private ApplicationDbContext context = default!;


    private List<FeedingRecord> FeedingRecords = new();

    protected override async Task OnInitializedAsync()
    {
        UserName = await UserIdentityProcessor.GetCurrentUserName();
        var userId = await UserIdentityProcessor.GetCurrentUserId();

        var today = DateTime.Now;

        if (userId != null)
        {
            context = await DbFactory.CreateDbContextAsync();
            FeedingRecords = await context.FeedingRecords.Where(x => x.UserId == userId && x.StartTimeUtc.Date == today.Date).ToListAsync();
        }

    }
}