@page "/feedingrecords/delete"
@using Microsoft.EntityFrameworkCore
@using BabyData.Data
@inject IDbContextFactory<BabyData.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Feeding Record</h2>
    <hr />
    @if (feedingrecord is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Date</dt>
            <dd class="col-sm-10">@feedingrecord.StartTime.Date</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StartTime</dt>
            <dd class="col-sm-10">@feedingrecord.StartTime.TimeOfDay</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EndTime</dt>
            <dd class="col-sm-10">@feedingrecord.EndTime.TimeOfDay</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">FeedingType</dt>
            <dd class="col-sm-10">@feedingrecord.FeedingType</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Notes</dt>
            <dd class="col-sm-10">@feedingrecord.Notes</dd>
        </dl>
        <EditForm method="post" Model="feedingrecord" OnValidSubmit="DeleteFeedingRecord" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(feedingrecord is null)">Delete</button> |
            <a href="/feedingrecords">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private FeedingRecord? feedingrecord;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        feedingrecord = await context.FeedingRecords.FirstOrDefaultAsync(m => m.Id == Id);

        if (feedingrecord is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteFeedingRecord()
    {
        using var context = DbFactory.CreateDbContext();
        context.FeedingRecords.Remove(feedingrecord!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/feedingrecords");
    }
}
